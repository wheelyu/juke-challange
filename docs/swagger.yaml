definitions:
  model.CreateEmployeeRequest:
    properties:
      email:
        type: string
      name:
        type: string
      position:
        type: string
      salary:
        minimum: 0
        type: number
    required:
    - email
    - name
    - position
    - salary
    type: object
info:
  contact: {}
paths:
  /api/employees:
    get:
      description: Menampilkan daftar semua karyawan
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.CreateEmployeeRequest'
            type: array
      summary: Get all employees
      tags:
      - employees
    post:
      consumes:
      - application/json
      description: Add a new employee to the system
      parameters:
      - description: Employee Data
        in: body
        name: employee
        required: true
        schema:
          $ref: '#/definitions/model.CreateEmployeeRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.CreateEmployeeRequest'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Create a new employee
      tags:
      - employees
  /api/employees/{id}:
    delete:
      description: Menghapus karyawan berdasarkan ID
      parameters:
      - description: Employee ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Delete an employee
      tags:
      - employees
    get:
      description: Menampilkan detail karyawan berdasarkan ID
      parameters:
      - description: Employee ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.CreateEmployeeRequest'
      summary: Get employee by ID
      tags:
      - employees
    put:
      consumes:
      - application/json
      description: Update the details of an existing employee
      parameters:
      - description: Employee ID
        in: path
        name: id
        required: true
        type: string
      - description: Employee Data
        in: body
        name: employee
        required: true
        schema:
          $ref: '#/definitions/model.CreateEmployeeRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.CreateEmployeeRequest'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Update an existing employee
      tags:
      - employees
swagger: "2.0"
